# cookie control by api
location ^~ /api/v1/auth {
	if ($request_method = 'OPTIONS') {
		add_header 'Access-Control-Allow-Origin' '*';
		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT';
		add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,mx-api-token,mx-api-ts,authorization';
		add_header 'Access-Control-Max-Age' 1728000;
		add_header 'Content-Type' 'text/plain; charset=utf-8';
		add_header 'Content-Length' 0;
		return 204;
	}
	proxy_cookie_path off;
	proxy_set_header X-Original-URI $request_uri;
	proxy_set_header X-Auth-Request $auth_request;
	proxy_set_header X-Auth-Content-Length $auth_content_length;
	proxy_set_header X-Real-Method $request_method;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $remote_addr;
	proxy_set_header X-Scheme $scheme;
	proxy_set_header X-Host $host;
	proxy_set_header Host $host;
	proxy_pass http://127.0.0.1:8082;
}

location ~ ^/api/_/ping {
	return 599;
}

location ~ ^/api/_/welcome {    
	return 599;
}

# cookie control by api
location = /api/v1/system/httpserver {
	proxy_cookie_path off;
	set $auth_request "SYS_MAINTENANCE_RW";
	try_files $uri @default-proxy;
}

# devicedb
location = /api/v1/device {
	set $auth_request "SYS_MAINTENANCE_RW";
	rewrite /api/v1/device /api/v1/devicedb;
	try_files $uri @default-proxy;
}

# user & account
location ~ ^/api/v1/(users|roles) {
# me and password for regular user
	set $auth_request "SYS_USER_RW";
	try_files $uri @default-proxy;
}

location ^~ /api/v1/users/me {
	set $auth_request "";
	try_files $uri @default-proxy;
}

# events
location ~ ^/api/v1/(system/ping|system/netstat|events)/event {
	set $auth_request "SYS_MAINTENANCE_RW";
	set $delimeter "";
	if ($is_args) {
		set $delimeter "&";
	}
	set $args $args${delimeter}event=true;

	rewrite ^/(.*)/event$ /$1;
	try_files $uri @default-proxy;
}

location ~ ^/api/v1/system {
	set $auth_request "SYS_MAINTENANCE_RW";
	set $auth_content_length "5242880";
	client_max_body_size 5M;
	try_files $uri @default-proxy;
}

location = /api/v1/system/appmonitor {
	try_files $uri @default-proxy$http_upgrade;
}    

location ~ ^/api/v1/(apps|events|permissions) {
	set $auth_request "";
	try_files $uri @default-proxy$http_upgrade;
}

location /api/ {
	set $auth_request "SYS_MAINTENANCE_RW";
	try_files $uri @default-proxy;
}

location @default-proxy {
	auth_request /api/v1/auth;
	auth_request_set $auth_status $upstream_status;
	auth_request_set $auth_uid $upstream_http_x_auth_uid;
	auth_request_set $auth_username $upstream_http_x_auth_username;
	try_files $uri @default-no-auth-proxy;
}

location @default-proxywebsocket {
	auth_request /api/v1/auth;
	auth_request_set $auth_status $upstream_status;
	auth_request_set $auth_uid $upstream_http_x_auth_uid;
	auth_request_set $auth_username $upstream_http_x_auth_username;

	proxy_connect_timeout       7d;
	proxy_send_timeout          7d;
	proxy_read_timeout          7d;

	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection "upgrade";
	proxy_pass http://127.0.0.1:8082;
}

error_page 599 = @default-no-auth-proxy;
location @default-no-auth-proxy {
	if ($request_method = 'OPTIONS') {
		add_header 'Access-Control-Allow-Origin' '*';
		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT';
		add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,mx-api-token,mx-api-ts,authorization';
		add_header 'Access-Control-Max-Age' 1728000;
		add_header 'Content-Type' 'text/plain; charset=utf-8';
		add_header 'Content-Length' 0;
		return 204;
	}
	add_header 'Access-Control-Allow-Origin' '*';
	add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT';
	add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,mx-api-token,mx-api-ts,authorization';
	proxy_connect_timeout       300;
	proxy_send_timeout          300;
	proxy_read_timeout          300;
	send_timeout                300;
	proxy_buffering             off;
	proxy_redirect off;

	proxy_set_header X-Real-Method $request_method;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $remote_addr;
	proxy_set_header X-Scheme $scheme;
	proxy_set_header X-Host $host;
	proxy_set_header X-Auth-Uid $auth_uid;
	proxy_set_header X-Auth-Username $auth_username;
	proxy_set_header Host $host;
	proxy_pass http://127.0.0.1:8082;
}

# app icons dashboard will use it
location ^~ /app-icons/ {
	root /var/www;
}

error_page 401 = @e401;
location @e401 {
	return 401 '{"error":{"code":401,"message":"authentication required"}}';
}

error_page 403 = @e403;
location @e403 {
	return 403 '{"error":{"code":403,"message":"authorization required"}}';
}

error_page 413 = @e413;
location @e413 {
	return 413 '{"error":{"code":413,"message":"content too large"}}';
}